{"version":3,"file":"RsModel-1lUGKbFs.js","sources":["../../node_modules/@coreui/react-pro/dist/esm/components/nav/CNav.js","../../node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarNav.js","../../node_modules/@coreui/react-pro/dist/esm/components/nav/CNavLink.js","../../node_modules/@coreui/react-pro/dist/esm/components/nav/CNavItem.js","../../node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabPane.js","../../src/components/RsModel.js"],"sourcesContent":["import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\n\nvar CNav = forwardRef(function (_a, ref) {\n    var _b;\n    var children = _a.children, _c = _a.as, Component = _c === void 0 ? 'ul' : _c, className = _a.className, layout = _a.layout, variant = _a.variant, rest = __rest(_a, [\"children\", \"as\", \"className\", \"layout\", \"variant\"]);\n    return (React.createElement(Component, __assign({ className: classNames('nav', (_b = {},\n            _b[\"nav-\".concat(layout)] = layout,\n            _b[\"nav-\".concat(variant)] = variant,\n            _b), className), role: \"navigation\" }, rest, { ref: ref }), children));\n});\nCNav.propTypes = {\n    as: PropTypes.elementType,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    layout: PropTypes.oneOf(['fill', 'justified']),\n    variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n};\nCNav.displayName = 'CNav';\n\nexport { CNav };\n//# sourceMappingURL=CNav.js.map\n","import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\n\nvar CNavContext = createContext({});\nvar recursiveClone = function (children, id, updateId) {\n    return React.Children.map(children, function (child, index) {\n        if (!React.isValidElement(child) ||\n            // @ts-expect-error the `children` exist in each component. TODO: resolve\n            (child.type.displayName !== 'CNavGroup' &&\n                // @ts-expect-error the `children` exist in each component. TODO: resolve\n                child.type.displayName !== 'CNavLink' &&\n                // @ts-expect-error the `children` exist in each component. TODO: resolve\n                child.type.displayName !== 'CNavItem')) {\n            return child;\n        }\n        var _id = id ? (updateId ? \"\".concat(id, \".\").concat(index) : \"\".concat(id)) : \"\".concat(index);\n        if (child.props && child.props.children) {\n            return React.cloneElement(child, {\n                idx: _id,\n                children: recursiveClone(child.props.children, _id, \n                // @ts-expect-error the `displayName` exist in each component. TODO: resolve\n                child.type.displayName === 'CNavItem' ? false : true),\n            });\n        }\n        return React.cloneElement(child, {\n            idx: _id,\n        });\n    });\n};\nvar CSidebarNav = forwardRef(function (_a, ref) {\n    var children = _a.children, _b = _a.as, Component = _b === void 0 ? 'ul' : _b, className = _a.className, rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n    var _c = useState(''), visibleGroup = _c[0], setVisibleGroup = _c[1];\n    var CNavContextValues = {\n        visibleGroup: visibleGroup,\n        setVisibleGroup: setVisibleGroup,\n    };\n    return (React.createElement(CNavContext.Provider, { value: CNavContextValues },\n        React.createElement(Component, __assign({ className: classNames('sidebar-nav', className), ref: ref }, rest), recursiveClone(children))));\n});\nCSidebarNav.propTypes = {\n    as: PropTypes.elementType,\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\nCSidebarNav.displayName = 'CSidebarNav';\n\nexport { CNavContext, CSidebarNav };\n//# sourceMappingURL=CSidebarNav.js.map\n","import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nimport { CNavContext } from '../sidebar/CSidebarNav.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\n\nvar CNavLink = forwardRef(function (_a, ref) {\n    var children = _a.children, className = _a.className, idx = _a.idx, rest = __rest(_a, [\"children\", \"className\", \"idx\"]);\n    var navLinkRef = useRef(null);\n    var forkedRef = useForkedRef(ref, navLinkRef);\n    var setVisibleGroup = useContext(CNavContext).setVisibleGroup;\n    useEffect(function () {\n        var _a;\n        rest.active = (_a = navLinkRef.current) === null || _a === void 0 ? void 0 : _a.classList.contains('active');\n        idx && rest.active && setVisibleGroup(idx);\n    }, [rest.active, className]);\n    return (React.createElement(CLink, __assign({ className: classNames('nav-link', className) }, rest, { ref: forkedRef }), children));\n});\nCNavLink.propTypes = {\n    active: PropTypes.bool,\n    as: PropTypes.elementType,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    idx: PropTypes.string,\n};\nCNavLink.displayName = 'CNavLink';\n\nexport { CNavLink };\n//# sourceMappingURL=CNavLink.js.map\n","import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CNavLink } from './CNavLink.js';\n\nvar CNavItem = forwardRef(function (_a, ref) {\n    var children = _a.children, _b = _a.as, Component = _b === void 0 ? 'li' : _b, className = _a.className, rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n    return (React.createElement(Component, { className: classNames('nav-item', className), ref: ref }, rest.href || rest.to ? (React.createElement(CNavLink, __assign({ className: className }, rest), children)) : (children)));\n});\nCNavItem.propTypes = {\n    as: PropTypes.elementType,\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\nCNavItem.displayName = 'CNavItem';\n\nexport { CNavItem };\n//# sourceMappingURL=CNavItem.js.map\n","import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\n\nvar CTabPane = forwardRef(function (_a, ref) {\n    var children = _a.children, className = _a.className, onHide = _a.onHide, onShow = _a.onShow, _b = _a.transition, transition = _b === void 0 ? true : _b, visible = _a.visible, rest = __rest(_a, [\"children\", \"className\", \"onHide\", \"onShow\", \"transition\", \"visible\"]);\n    var tabPaneRef = useRef();\n    var forkedRef = useForkedRef(ref, tabPaneRef);\n    return (React.createElement(Transition, { in: visible, nodeRef: tabPaneRef, onEnter: onShow, onExit: onHide, timeout: 150 }, function (state) { return (React.createElement(\"div\", __assign({ className: classNames('tab-pane', {\n            active: visible,\n            fade: transition,\n            show: state === 'entered',\n        }, className) }, rest, { ref: forkedRef }), children)); }));\n});\nCTabPane.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    onHide: PropTypes.func,\n    onShow: PropTypes.func,\n    transition: PropTypes.bool,\n    visible: PropTypes.bool,\n};\nCTabPane.displayName = 'CTabPane';\n\nexport { CTabPane };\n//# sourceMappingURL=CTabPane.js.map\n","import React, { useState, useEffect } from 'react';\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CButton\n} from '@coreui/react-pro';\nimport { useModal } from \"src/api/ModalProvider\";\nimport ColorBox from \"src/api/ColorBox\"; // Import useModal from the context provider\n\nconst RsModel = () => {\n  const { visible, modelId, closeModal } = useModal(); // Access modal service to control modal behavior\n  const [activeTab, setActiveTab] = useState(0); // Track active tab\n  const [modelData, setModelData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (modelId) {\n        setLoading(true);\n        try {\n          const response = await fetch(`http://127.0.0.1:8080/public/model/${modelId}`);\n\n\n          const data = await response.json();\n          setModelData(data);\n        } catch (error) {\n          console.error('Error fetching model data:', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n  }, [modelId]);\n\n  // Helper function to check if an array or list is empty\n  const isEmptyArray = (arr) => Array.isArray(arr) && arr.length === 0;\n\n\n  const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  // Helper function to render colors or textures in ColorBox components\n  const renderColorBoxesInline = (key, colors) => (\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n      <strong style={{ marginRight: '10px' }}>{capitalize(key)}:</strong>\n      <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n        {colors && colors.length > 0 ? colors.map((color, index) => (\n          <ColorBox\n            key={index}\n            width={30}\n            height={30}\n            packedHsl={color}\n            tooltip\n          />\n        )) : <p>No colors available.</p>}\n      </div>\n    </div>\n  );\n\n  // Render model data based on whether values are default or not\n  const renderModelData = () => {\n    if (loading) {\n      return <p>Loading data...</p>;\n    }\n\n    if (!modelData) {\n      return <p>No data available.</p>;\n    }\n\n    const {totalFaces, totalVerts, textures, colors, attachments} = modelData;\n\n    return (\n      <div>\n        {totalFaces > 0 && <p><strong>Total Faces:</strong> {totalFaces}</p>}\n        {totalVerts > 0 && <p><strong>Total Verts:</strong> {totalVerts}</p>}\n\n        {/* Render Color Fields */}\n        {colors && renderColorBoxesInline('Colours', colors)}\n\n        {/* Scrollable Attachments Section without border or padding */}\n        {attachments && attachments.total > 0 && (\n          <div style={{ maxHeight: '300px', overflowY: 'auto' }}>\n            <p><strong>Total Attachments:</strong> {attachments.total}</p>\n\n            {/* Items Section */}\n            {!isEmptyArray(attachments.items) && (\n              <div>\n                <h4>Items</h4>\n                <ul>\n                  {attachments.items.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* Objects Section */}\n            {!isEmptyArray(attachments.objects) && (\n              <div>\n                <h4>Objects</h4>\n                <ul>\n                  {attachments.objects.map((object, index) => (\n                    <li key={index}>{object}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* NPCs Section */}\n            {!isEmptyArray(attachments.npcs) && (\n              <div>\n                <h4>NPCs</h4>\n                <ul>\n                  {attachments.npcs.map((npc, index) => (\n                    <li key={index}>{npc}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n    return (\n    <>\n      {/* Modal with 3 tabs */}\n      <CModal\n        alignment=\"center\"\n        visible={visible}\n        onClose={closeModal} // Close when backdrop or close button is clicked\n        backdrop={true} // Enable clicking outside to close the modal\n      >\n        <CModalHeader>\n          <CModalTitle>Model {modelId} Details</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {/* Tab Navigation */}\n          <CNav variant=\"tabs\">\n            <CNavItem>\n              <CNavLink\n                active={activeTab === 0}\n                onClick={() => setActiveTab(0)}\n              >\n                Model Data\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink\n                active={activeTab === 1}\n                onClick={() => setActiveTab(1)}\n              >\n                Model View\n              </CNavLink>\n            </CNavItem>\n          </CNav>\n\n          {/* Tab Content */}\n          <CTabContent>\n            <CTabPane role=\"tabpanel\" visible={activeTab === 0}>\n              <div>{renderModelData()}</div>\n            </CTabPane>\n            <CTabPane role=\"tabpanel\" visible={activeTab === 1}>\n              <div>\n                <p>Coming Soon</p>\n              </div>\n            </CTabPane>\n          </CTabContent>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={closeModal}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default RsModel;\n"],"names":["CNav","forwardRef","_a","ref","_b","children","_c","Component","className","layout","variant","rest","__rest","React","__assign","classNames","PropTypes","CNavContext","createContext","recursiveClone","id","updateId","child","index","_id","CSidebarNav","useState","visibleGroup","setVisibleGroup","CNavContextValues","CNavLink","idx","navLinkRef","useRef","forkedRef","useForkedRef","useContext","useEffect","CLink","CNavItem","CTabPane","onHide","onShow","transition","visible","tabPaneRef","Transition","state","RsModel","modelId","closeModal","useModal","activeTab","setActiveTab","modelData","setModelData","loading","setLoading","data","error","isEmptyArray","arr","capitalize","str","renderColorBoxesInline","key","colors","jsxs","color","jsx","ColorBox","renderModelData","totalFaces","totalVerts","textures","attachments","item","object","npc","Fragment","CModal","CModalHeader","CModalTitle","CModalBody","CTabContent","CModalFooter","CButton"],"mappings":"wRAKA,IAAIA,EAAOC,EAAU,WAAC,SAAUC,EAAIC,EAAK,CACrC,IAAIC,EACAC,EAAWH,EAAG,SAAUI,EAAKJ,EAAG,GAAIK,EAAYD,IAAO,OAAS,KAAOA,EAAIE,EAAYN,EAAG,UAAWO,EAASP,EAAG,OAAQQ,EAAUR,EAAG,QAASS,EAAOC,EAAOV,EAAI,CAAC,WAAY,KAAM,YAAa,SAAU,SAAS,CAAC,EACzN,OAAQW,EAAM,cAAcN,EAAWO,EAAS,CAAE,UAAWC,EAAW,OAAQX,EAAK,CAAE,EAC/EA,EAAG,OAAO,OAAOK,CAAM,CAAC,EAAIA,EAC5BL,EAAG,OAAO,OAAOM,CAAO,CAAC,EAAIA,EAC7BN,GAAKI,CAAS,EAAG,KAAM,YAAc,EAAEG,EAAM,CAAE,IAAKR,EAAK,EAAGE,CAAQ,CAChF,CAAC,EACDL,EAAK,UAAY,CACb,GAAIgB,EAAU,YACd,SAAUA,EAAU,KACpB,UAAWA,EAAU,OACrB,OAAQA,EAAU,MAAM,CAAC,OAAQ,WAAW,CAAC,EAC7C,QAASA,EAAU,MAAM,CAAC,QAAS,OAAQ,YAAa,kBAAkB,CAAC,CAC/E,EACAhB,EAAK,YAAc,OCfnB,IAAIiB,EAAcC,EAAAA,cAAc,CAAA,CAAE,EAC9BC,EAAiB,SAAUd,EAAUe,EAAIC,EAAU,CACnD,OAAOR,EAAM,SAAS,IAAIR,EAAU,SAAUiB,EAAOC,EAAO,CACxD,GAAI,CAACV,EAAM,eAAeS,CAAK,GAE1BA,EAAM,KAAK,cAAgB,aAExBA,EAAM,KAAK,cAAgB,YAE3BA,EAAM,KAAK,cAAgB,WAC/B,OAAOA,EAEX,IAAIE,EAAMJ,EAAMC,EAAW,GAAG,OAAOD,EAAI,GAAG,EAAE,OAAOG,CAAK,EAAI,GAAG,OAAOH,CAAE,EAAK,GAAG,OAAOG,CAAK,EAC9F,OAAID,EAAM,OAASA,EAAM,MAAM,SACpBT,EAAM,aAAaS,EAAO,CAC7B,IAAKE,EACL,SAAUL,EAAeG,EAAM,MAAM,SAAUE,EAE/CF,EAAM,KAAK,cAAgB,UAAyB,CACpE,CAAa,EAEET,EAAM,aAAaS,EAAO,CAC7B,IAAKE,CACjB,CAAS,CACT,CAAK,CACL,EACIC,EAAcxB,EAAU,WAAC,SAAUC,EAAIC,EAAK,CAC5C,IAAIE,EAAWH,EAAG,SAAUE,EAAKF,EAAG,GAAIK,EAAYH,IAAO,OAAS,KAAOA,EAAII,EAAYN,EAAG,UAAWS,EAAOC,EAAOV,EAAI,CAAC,WAAY,KAAM,WAAW,CAAC,EACtJI,EAAKoB,EAAAA,SAAS,EAAE,EAAGC,EAAerB,EAAG,CAAC,EAAGsB,EAAkBtB,EAAG,CAAC,EAC/DuB,EAAoB,CACpB,aAAcF,EACd,gBAAiBC,CACzB,EACI,OAAQf,EAAM,cAAcI,EAAY,SAAU,CAAE,MAAOY,CAAmB,EAC1EhB,EAAM,cAAcN,EAAWO,EAAS,CAAE,UAAWC,EAAW,cAAeP,CAAS,EAAG,IAAKL,CAAG,EAAIQ,CAAI,EAAGQ,EAAed,CAAQ,CAAC,CAAC,CAC/I,CAAC,EACDoB,EAAY,UAAY,CACpB,GAAIT,EAAU,YACd,SAAUA,EAAU,KACpB,UAAWA,EAAU,MACzB,EACAS,EAAY,YAAc,cCrC1B,IAAIK,EAAW7B,EAAU,WAAC,SAAUC,EAAIC,EAAK,CACzC,IAAIE,EAAWH,EAAG,SAAUM,EAAYN,EAAG,UAAW6B,EAAM7B,EAAG,IAAKS,EAAOC,EAAOV,EAAI,CAAC,WAAY,YAAa,KAAK,CAAC,EAClH8B,EAAaC,SAAO,IAAI,EACxBC,EAAYC,EAAahC,EAAK6B,CAAU,EACxCJ,EAAkBQ,EAAAA,WAAWnB,CAAW,EAAE,gBAC9CoB,OAAAA,EAAAA,UAAU,UAAY,CAClB,IAAInC,EACJS,EAAK,QAAUT,EAAK8B,EAAW,WAAa,MAAQ9B,IAAO,OAAS,OAASA,EAAG,UAAU,SAAS,QAAQ,EAC3G6B,GAAOpB,EAAK,QAAUiB,EAAgBG,CAAG,CAC5C,EAAE,CAACpB,EAAK,OAAQH,CAAS,CAAC,EACnBK,EAAM,cAAcyB,EAAOxB,EAAS,CAAE,UAAWC,EAAW,WAAYP,CAAS,CAAC,EAAIG,EAAM,CAAE,IAAKuB,CAAW,CAAA,EAAG7B,CAAQ,CACrI,CAAC,EACDyB,EAAS,UAAY,CACjB,OAAQd,EAAU,KAClB,GAAIA,EAAU,YACd,SAAUA,EAAU,KACpB,UAAWA,EAAU,OACrB,SAAUA,EAAU,KACpB,IAAKA,EAAU,MACnB,EACAc,EAAS,YAAc,WCvBvB,IAAIS,EAAWtC,EAAU,WAAC,SAAUC,EAAIC,EAAK,CACzC,IAAIE,EAAWH,EAAG,SAAUE,EAAKF,EAAG,GAAIK,EAAYH,IAAO,OAAS,KAAOA,EAAII,EAAYN,EAAG,UAAWS,EAAOC,EAAOV,EAAI,CAAC,WAAY,KAAM,WAAW,CAAC,EAC1J,OAAQW,EAAM,cAAcN,EAAW,CAAE,UAAWQ,EAAW,WAAYP,CAAS,EAAG,IAAKL,CAAK,EAAEQ,EAAK,MAAQA,EAAK,GAAME,EAAM,cAAciB,EAAUhB,EAAS,CAAE,UAAWN,CAAS,EAAIG,CAAI,EAAGN,CAAQ,EAAMA,CAAS,CAC9N,CAAC,EACDkC,EAAS,UAAY,CACjB,GAAIvB,EAAU,YACd,SAAUA,EAAU,KACpB,UAAWA,EAAU,MACzB,EACAuB,EAAS,YAAc,WCPvB,IAAIC,EAAWvC,EAAU,WAAC,SAAUC,EAAIC,EAAK,CACzC,IAAIE,EAAWH,EAAG,SAAUM,EAAYN,EAAG,UAAWuC,EAASvC,EAAG,OAAQwC,EAASxC,EAAG,OAAQE,EAAKF,EAAG,WAAYyC,EAAavC,IAAO,OAAS,GAAOA,EAAIwC,EAAU1C,EAAG,QAASS,EAAOC,EAAOV,EAAI,CAAC,WAAY,YAAa,SAAU,SAAU,aAAc,SAAS,CAAC,EACpQ2C,EAAaZ,EAAAA,SACbC,EAAYC,EAAahC,EAAK0C,CAAU,EAC5C,OAAQhC,EAAM,cAAciC,EAAY,CAAE,GAAIF,EAAS,QAASC,EAAY,QAASH,EAAQ,OAAQD,EAAQ,QAAS,KAAO,SAAUM,EAAO,CAAE,OAAQlC,EAAM,cAAc,MAAOC,EAAS,CAAE,UAAWC,EAAW,WAAY,CACxN,OAAQ6B,EACR,KAAMD,EACN,KAAMI,IAAU,SAC5B,EAAWvC,CAAS,GAAKG,EAAM,CAAE,IAAKuB,CAAS,CAAE,EAAG7B,CAAQ,CAAG,CAAE,CACjE,CAAC,EACDmC,EAAS,UAAY,CACjB,SAAUxB,EAAU,KACpB,UAAWA,EAAU,OACrB,OAAQA,EAAU,KAClB,OAAQA,EAAU,KAClB,WAAYA,EAAU,KACtB,QAASA,EAAU,IACvB,EACAwB,EAAS,YAAc,WCTvB,MAAMQ,EAAU,IAAM,CACpB,KAAM,CAAE,QAAAJ,EAAS,QAAAK,EAAS,WAAAC,GAAeC,EAAS,EAC5C,CAACC,EAAWC,CAAY,EAAI3B,WAAS,CAAC,EACtC,CAAC4B,EAAWC,CAAY,EAAI7B,WAAS,IAAI,EACzC,CAAC8B,EAASC,CAAU,EAAI/B,WAAS,EAAI,EAE3CW,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAIY,EAAS,CACXQ,EAAW,EAAI,EACX,GAAA,CAII,MAAAC,EAAO,MAHI,MAAM,MAAM,sCAAsCT,CAAO,EAAE,GAGhD,OAC5BM,EAAaG,CAAI,QACVC,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,QACjD,CACAF,EAAW,EAAK,CAClB,CACF,CAAA,IAGQ,EACT,CAACR,CAAO,CAAC,EAGN,MAAAW,EAAgBC,GAAQ,MAAM,QAAQA,CAAG,GAAKA,EAAI,SAAW,EAG7DC,EAAcC,GAAQA,EAAI,OAAO,CAAC,EAAE,cAAgBA,EAAI,MAAM,CAAC,EAG/DC,EAAyB,CAACC,EAAKC,WAClC,MAAI,CAAA,MAAO,CAAE,QAAS,OAAQ,WAAY,SAAU,aAAc,MACjE,EAAA,SAAA,CAAAC,EAAA,KAAC,SAAO,CAAA,MAAO,CAAE,YAAa,MAAW,EAAA,SAAA,CAAAL,EAAWG,CAAG,EAAE,GAAA,EAAC,QACzD,MAAI,CAAA,MAAO,CAAE,QAAS,OAAQ,IAAK,OAAQ,SAAU,QACnD,SAAAC,GAAUA,EAAO,OAAS,EAAIA,EAAO,IAAI,CAACE,EAAO7C,IAChD8C,EAAA,IAACC,EAAA,CAEC,MAAO,GACP,OAAQ,GACR,UAAWF,EACX,QAAO,EAAA,EAJF7C,CAAA,CAMR,EAAK8C,EAAA,IAAA,IAAA,CAAE,+BAAoB,CAAA,EAC9B,CACF,CAAA,CAAA,EAIIE,EAAkB,IAAM,CAC5B,GAAIf,EACK,OAAAa,EAAA,IAAC,KAAE,SAAe,iBAAA,CAAA,EAG3B,GAAI,CAACf,EACI,OAAAe,EAAA,IAAC,KAAE,SAAkB,oBAAA,CAAA,EAG9B,KAAM,CAAC,WAAAG,EAAY,WAAAC,EAAY,SAAAC,EAAU,OAAAR,EAAQ,YAAAS,CAAe,EAAArB,EAEhE,cACG,MACE,CAAA,SAAA,CAAakB,EAAA,UAAM,IAAE,CAAA,SAAA,CAAAH,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,IAAEG,CAAA,EAAW,EAC/DC,EAAa,GAAKN,EAAAA,KAAC,IAAE,CAAA,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,IAAEI,CAAA,EAAW,EAG/DP,GAAUF,EAAuB,UAAWE,CAAM,EAGlDS,GAAeA,EAAY,MAAQ,GACjCR,EAAAA,KAAA,MAAA,CAAI,MAAO,CAAE,UAAW,QAAS,UAAW,MAAA,EAC3C,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAkB,oBAAA,CAAA,EAAS,IAAEM,EAAY,KAAA,EAAM,EAGzD,CAACf,EAAae,EAAY,KAAK,UAC7B,MACC,CAAA,SAAA,CAAAN,EAAAA,IAAC,MAAG,SAAK,OAAA,CAAA,EACRA,EAAA,IAAA,KAAA,CACE,SAAYM,EAAA,MAAM,IAAI,CAACC,EAAMrD,IAC3B8C,EAAA,IAAA,KAAA,CAAgB,SAARO,CAAA,EAAArD,CAAa,CACvB,EACH,CAAA,EACF,EAID,CAACqC,EAAae,EAAY,OAAO,UAC/B,MACC,CAAA,SAAA,CAAAN,EAAAA,IAAC,MAAG,SAAO,SAAA,CAAA,EACVA,EAAA,IAAA,KAAA,CACE,SAAYM,EAAA,QAAQ,IAAI,CAACE,EAAQtD,IAC/B8C,EAAA,IAAA,KAAA,CAAgB,SAARQ,CAAA,EAAAtD,CAAe,CACzB,EACH,CAAA,EACF,EAID,CAACqC,EAAae,EAAY,IAAI,UAC5B,MACC,CAAA,SAAA,CAAAN,EAAAA,IAAC,MAAG,SAAI,MAAA,CAAA,EACPA,EAAA,IAAA,KAAA,CACE,SAAYM,EAAA,KAAK,IAAI,CAACG,EAAKvD,IACzB8C,EAAA,IAAA,KAAA,CAAgB,SAARS,CAAA,EAAAvD,CAAY,CACtB,EACH,CAAA,EACF,CAAA,EAEJ,CAEJ,CAAA,CAAA,CAAA,EAIF,OAGE8C,MAAAU,EAAAA,SAAA,CAAA,SAAAZ,EAAA,KAACa,EAAA,CACC,UAAU,SACV,QAAApC,EACA,QAASM,EACT,SAAU,GAEV,SAAA,CAACmB,EAAA,IAAAY,EAAA,CACC,gBAACC,EAAY,CAAA,SAAA,CAAA,SAAOjC,EAAQ,UAAA,CAAA,CAAQ,CACtC,CAAA,SACCkC,EAEC,CAAA,SAAA,CAAChB,EAAAA,KAAAnE,EAAA,CAAK,QAAQ,OACZ,SAAA,CAAAqE,MAAC9B,EACC,CAAA,SAAA8B,EAAA,IAACvC,EAAA,CACC,OAAQsB,IAAc,EACtB,QAAS,IAAMC,EAAa,CAAC,EAC9B,SAAA,YAAA,CAAA,EAGH,QACCd,EACC,CAAA,SAAA8B,EAAA,IAACvC,EAAA,CACC,OAAQsB,IAAc,EACtB,QAAS,IAAMC,EAAa,CAAC,EAC9B,SAAA,YAAA,CAAA,EAGH,CAAA,EACF,SAGC+B,EACC,CAAA,SAAA,CAACf,EAAA,IAAA7B,EAAA,CAAS,KAAK,WAAW,QAASY,IAAc,EAC/C,SAACiB,EAAAA,IAAA,MAAA,CAAK,SAAgBE,EAAA,CAAE,CAAA,EAC1B,EACCF,MAAA7B,EAAA,CAAS,KAAK,WAAW,QAASY,IAAc,EAC/C,SAAAiB,EAAAA,IAAC,MACC,CAAA,SAAAA,EAAAA,IAAC,IAAE,CAAA,SAAA,aAAA,CAAW,CAChB,CAAA,EACF,CAAA,EACF,CAAA,EACF,EACAA,EAAAA,IAACgB,GACC,SAAChB,EAAA,IAAAiB,EAAA,CAAQ,MAAM,YAAY,QAASpC,EAAY,SAAA,OAAA,CAEhD,CACF,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ","x_google_ignoreList":[0,1,2,3,4]}