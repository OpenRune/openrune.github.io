{"version":3,"file":"ColorBox-D-dq3IgE.js","sources":["../../src/api/ColorBox.js"],"sourcesContent":["import React from 'react';\nimport { CTooltip } from '@coreui/react';\nimport {convertHSLToHex, unpackJagexHSL} from '../api/ColorUtils'; // Assuming the utility functions are in colorUtils.js\n\nconst ColorBox = ({\n                    width = 100,\n                    height = 100,\n                    packedHsl = 0,\n                    tooltip = false,\n                    showHex = false // New prop to display hex code inside the box\n                  }) => {\n  // Unpack the HSL values from the packed HSL input\n  const { hue, saturation, lightness } = unpackJagexHSL(packedHsl);\n\n  // Convert the unpacked HSL to CSS-compatible HSL color and Hex color\n  const hslColor = convertHSLToHex(hue, saturation, lightness);\n\n  const boxStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n    backgroundColor: hslColor, // Set the background color using the CSS HSL color\n    border: '1px solid #000',\n    display: 'flex', // Use flexbox to center text\n    alignItems: 'center', // Vertically center the text\n    justifyContent: 'center', // Horizontally center the text\n    position: 'relative',\n    fontSize: '12px', // Font size for the hex code\n    color: '#fff', // White text color for hex code (assuming dark backgrounds)\n    textShadow: '1px 1px 2px rgba(0,0,0,0.5)', // Add text shadow for better readability\n    fontFamily: 'monospace', // Monospace font for hex code\n  };\n\n  // Create tooltip content displaying both HSL and Hex values\n  const tooltipContent = `\n    HSL: (${hue}, ${saturation}%, ${lightness}%)\n    HEX: ${hslColor}\n    Jagex HSL: ${packedHsl}\n  `.trim();\n\n  return (\n    <>\n      {tooltip ? (\n        <CTooltip content={tooltipContent} placement=\"top\">\n          <div style={boxStyle}>\n            {showHex && hslColor} {/* Display the hex code in the box if showHex is true */}\n          </div>\n        </CTooltip>\n      ) : (\n        <div style={boxStyle}>\n          {showHex && hslColor} {/* Display the hex code in the box if showHex is true */}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ColorBox;\n"],"names":["ColorBox","width","height","packedHsl","tooltip","showHex","hue","saturation","lightness","unpackJagexHSL","hslColor","convertHSLToHex","boxStyle","tooltipContent","jsx","Fragment","CTooltip","jsxs"],"mappings":"4IAIA,MAAMA,EAAW,CAAC,CACE,MAAAC,EAAQ,IACR,OAAAC,EAAS,IACT,UAAAC,EAAY,EACZ,QAAAC,EAAU,GACV,QAAAC,EAAU,EACZ,IAAM,CAEtB,KAAM,CAAE,IAAAC,EAAK,WAAAC,EAAY,UAAAC,CAAU,EAAIC,EAAeN,CAAS,EAGzDO,EAAWC,EAAgBL,EAAKC,EAAYC,CAAS,EAErDI,EAAW,CACf,MAAO,GAAGX,CAAK,KACf,OAAQ,GAAGC,CAAM,KACjB,gBAAiBQ,EACjB,OAAQ,iBACR,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,SAAU,WACV,SAAU,OACV,MAAO,OACP,WAAY,8BACZ,WAAY,WAAA,EAIRG,EAAiB;AAAA,YACbP,CAAG,KAAKC,CAAU,MAAMC,CAAS;AAAA,WAClCE,CAAQ;AAAA,iBACFP,CAAS;AAAA,IACtB,KAAK,EAGL,OAAAW,EAAAA,IAAAC,EAAAA,SAAA,CACG,SACCX,EAAAU,EAAA,IAACE,EAAS,CAAA,QAASH,EAAgB,UAAU,MAC3C,SAAAI,EAAA,KAAC,MAAI,CAAA,MAAOL,EACT,SAAA,CAAWP,GAAAK,EAAS,GAAA,CACvB,CAAA,CACF,CAAA,EAECO,EAAA,KAAA,MAAA,CAAI,MAAOL,EACT,SAAA,CAAWP,GAAAK,EAAS,GAAA,CACvB,CAAA,CAEJ,CAAA,CAEJ"}